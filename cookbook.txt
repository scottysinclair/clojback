clojure general
------------------------------------------

def - evaluated once on script load
defn -evaluated each time it is called

#functions
defn - name params body - defines a named function

#anonymous functions
(fn [message] (println message))

#anonymous functions - shorthand
#(+ 6 %)
#(+ %1 %2)


#list - linked list
(1,2,3)

#vector - array, preallocated
[1,2,3]



clojure Java
---------------------------------------

#import a class
(import 'hello.Hello)

#call static method
(ClassName/methodName arguments)



clojure pedestal
---------------------------------------------

#start the http server
(def serv (run-dev))



REPL
--------------------------------------------
#start the REPL
lein repl

#change namespace 
(in-ns 'hello.core)

#list contents of namespace
clojure.repl/dir clojback.service)

#reload a namespace in the REPL
(use 'clojback.service :reload)
(use 'clojback.barleydb :reload)



LACIA
-------------------------------------------

#lacina graphql parsing SDL file
https://lacinia.readthedocs.io/en/latest/schema/parsing.html

#lacia example
https://github.com/hlship/boardgamegeek-graphql-proxy/tree/master/src/bgg_graphql_proxy



lein

#dependencey tree
lein deps :tree


--------------------------------------------------------

queries

{
  transactionsInMonth(fromDate: "01-01-2014", toDate: "10-10-2014") {
    id
    date
    amount
    category {
      id
      name
    }
  }
  
  categorys {
    id
    name
  }
  
  months {
    id
    starting
    startingBalance
    finished
  }
}
